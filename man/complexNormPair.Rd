% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/complexNormPair.R
\name{complexNormPair}
\alias{complexNormPair}
\title{Scaling Factor Estimate Between Two Samples}
\usage{
complexNormPair(count, cutoff = 50L, fold = 10, h = 0.1, plot = FALSE)
}
\arguments{
\item{count}{A two-column matrix of read counts for peaks or
high coverage bins, where columns are samples and rows are peaks
or bins. This matrix can be generated by function \code{regionCounts}.}

\item{cutoff}{A numeric cut off on \code{count} matrix. If positive,
only peaks/bins with counts larger than \code{cutoff} in at least one
sample are used to estimate the scaling factor. We recommend a larger
cutoff since background signal can dramatically mask the right estimation
of kernal density, especially for deep sequenced ChIP-seq samples.
(Default: 50)}

\item{fold}{A numeric threshold to help determining the binding type.
In detail, if top 2 estimated modes on smoothed kernal density have
a height differece less than the folds given by \code{fold}, binding
type will be determined as bimodel; otherwise, it is unimodel. This
number should be larger than 1. (Default: 10)}

\item{h}{Initial smoothing factor when estimating kernal density for bump
hunting. (Default: 0.1)}

\item{plot}{A logical indicator that if MA plot and smoothed kernal density
should be visualized. (Default: FALSE)}
}
\value{
A list with the following conponents:
\item{sizefac}{A numeric vector indicating estimated size of the
given two samples}
\item{type}{A character with value either "bimodel" or "unimodel",
indicating the binding types}
}
\description{
This function determines the binding type of given
ChIP-Seq samples first by kernal density bump hunting.
If bimodel, it further calculate  which
mode to be used for scaling. Then, it provides scaling factors
for normalization. This function serves as the basis for function
\code{complexNorm}, which iteratively invokes this function for
scaling factor estimates across replicates and conditions.
}
\examples{
## load sample data
data(complex)
names(complex)

## test sample data
complexNormPair(complex$counts)
}

